bind_cols(groupDatLong %>% select(-libID))
View(confoundDatLong)
pc1DatLong <- bind_cols(confoundDatLong, melt(pcaLong$x[, 1], value.name = "pc1"))
pc1DatLong %>%
melt(measure.vars = setdiff(names(confoundDatLong), "libID")) %>%
ggplot(aes(x = value, y = pc1)) +
geom_point() +
facet_wrap(~ variable, nrow = 2, scales = "free_x") +
stat_smooth(aes(group = 1)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90),
panel.grid.major = element_line(colour = "grey", linetype = 3)) +
scale_colour_colorblind()
bcapDatLong <- dgeLong$counts[which(dgeLong$genes$mgiSymbol == "Pik3ap1"), ] %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus)
bcapDatLong %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Define the design matrix, only including terms corresponding to KO status;
# use voom to calculate transformed expression values
koDesignLong <- model.matrix(~ koStatus, data = groupDatLong)
koVoomLong <- voomWithQualityWeights(dgeLong, design = koDesignLong,
plot = TRUE)
# Fit model for the group design
koFitLong <- lmFit(koVoomLong, koDesignLong)
koFitLong <- eBayes(koFitLong)
koResultsLong <- topTable(koFitLong, number = nrow(dgeLong))
koResultsLong %>%
filter(mgiSymbol == "Pik3ap1")
# Define the design matrix, including terms corresponding to KO status and HSC
# population; use voom to calculate transformed expression values
koHscDesignLong <- model.matrix(~ koStatus + hscPop, data = groupDatLong)
koHscVoomLong <- voomWithQualityWeights(dgeLong, design = koHscDesignLong,
plot = TRUE)
koResultsLong %>% glimpse()
koResultsLong %>% head()
koResultsLong %>% filter(adj.P.Val < 0.05)
# Define the design matrix, only including terms corresponding to KO status;
# use voom to calculate transformed expression values
koDesignLong <- model.matrix(~ koStatus, data = groupDatLong)
koVoomLong <- voomWithQualityWeights(dgeLong, design = koDesignLong,
plot = TRUE)
groupDatLong
# Fit model for the group design
koFitLong <- lmFit(koVoomLong, koDesignLong)
koFitLong <- eBayes(koFitLong)
koResultsLong <- topTable(koFitLong, number = nrow(dgeLong))
koResultsLong %>%
filter(mgiSymbol == "Pik3ap1")
topTable(koFitLong)
# Get data for libraries from long-term HSC population
groupDatShort <- groupDat %>%
filter(hscPop == "short")
countDatShort <- countDat[, names(countDat) %in% groupDatShort$libID]
# Filter genes with (cpm > 10) in < 10% of samples
dgeShort = setUpDGEList(countData = countDatShort, geneData = geneDat,
filterCount = 10,
filterPercentage = 0.20)
# Get MGI gene symbols corresponding to Ensembl Gene IDs
dgeShortGeneDat <- dgeShort$genes
mart <- useMart(biomart = "ensembl", dataset = "mmusculus_gene_ensembl")
ens2Gene <- getBM(attributes = c("ensembl_gene_id", "mgi_symbol"),
filters = "ensembl_gene_id",
values = dgeShortGeneDat$ensemblID, mart = mart)
ens2Gene = ens2Gene[match(dgeShortGeneDat$ensemblID, ens2Gene$ensembl_gene_id), ]
# Insert MGI gene symbols for genes in DGE object gene info
dgeShortGeneDat <- dgeShortGeneDat %>%
mutate(mgiSymbol = ens2Gene$mgi_symbol,
mgiSymbol = ifelse(is.na(mgiSymbol), "NA", mgiSymbol))
dgeShort$genes <- dgeShortGeneDat
# Compute principal components
pcaShort <- prcomp(t(dgeShort$counts))
# Plot first two PCs and color by group
autoplot(pcaShort, data = groupDatShort, colour = 'group', label.size = 3,
shape = FALSE) +
scale_color_colorblind() +
guides(size = FALSE)
# Plot the percentage of std dev explained by each PC
data_frame(pc = 1:length(pcaShort$sdev),
percSdev = pcaShort$sdev / sum(pcaShort$sdev)) %>%
ggplot(aes(x = pc, y = percSdev)) +
geom_bar(stat = "identity", alpha = 0.8) +
theme_classic() +
scale_fill_colorblind()
autoplot(pcaShort, data = groupDatShort, colour = 'group', label.size = 3,
shape = FALSE) +
scale_color_colorblind() +
guides(size = FALSE)
# Build data frame including design, metric, and other experimental variables
confoundDatShort <- designDat %>%
filter(lib_id %in% groupDatShort$libID) %>%
select(libID = lib_id, sort_date, age_in_weeks, ng_per_ul) %>%
left_join(metricSummary, by = c("libID" = "libID")) %>%
bind_cols(groupDatShort %>% select(-libID))
# Include PC1 values with data frame of (potentially) confounding variables
pc1DatShort <- bind_cols(confoundDatShort, melt(pcaShort$x[, 1], value.name = "pc1"))
# Plot PC1 against all other variables
pc1DatShort %>%
melt(measure.vars = setdiff(names(confoundDatShort), "libID")) %>%
ggplot(aes(x = value, y = pc1)) +
geom_point() +
facet_wrap(~ variable, nrow = 2, scales = "free_x") +
stat_smooth(aes(group = 1)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90),
panel.grid.major = element_line(colour = "grey", linetype = 3)) +
scale_colour_colorblind()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapDatShort <- dgeShort$counts[which(dgeShort$genes$mgiSymbol == "Pik3ap1"), ] %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus)
# Plot BCAP counts by KO status and facet by HSC population
bcapDatShort %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Define the design matrix, only including terms corresponding to KO status;
# use voom to calculate transformed expression values
koDesignShort <- model.matrix(~ koStatus, data = groupDatShort)
koVoomShort <- voomWithQualityWeights(dgeShort, design = koDesignShort,
plot = TRUE)
# Fit model for the group design
koFitShort <- lmFit(koVoomShort, koDesignShort)
koFitShort <- eBayes(koFitShort)
koResultsShort <- topTable(koFitShort, number = nrow(dgeShort))
koResultsShort %>%
filter(mgiSymbol == "Pik3ap1")
topTable(koFitShort)
?kable
?voom
koVoom$E %>% head()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapDatShort <- koVoomShort$E[which(koVoomShort$genes$mgiSymbol == "Pik3ap1"), ] %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus)
# Plot BCAP counts by KO status and facet by HSC population
bcapDatShort %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
bcapIdx <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapIdx
str(koVoomShort)
str(koVoom)
glimpse(koVoom)
koVoom$norm.factors
koVoom$Data
names(koVoom)
koVoom$design
names(koVoom)
koVoom$targets
dge$norm.factors
str(dge)
names(dge)
dge$samples$norm.factors
dge$samples
koVoom$targets
dge$samples$lib.size * dge$samples$norm.factors
koVoom$weights %>% head()
koVoom$weights %>% dim()
koVoom$weights[bcapIdx, 1]
koVoom$weights[bcapIdx, ]
koVoom$weights[bcapIdx, ] * koVoom$E[bcapIdx, ]
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatShort <- koVoomShort$E[bcapIdx, ] * koVoomShort$weights[bcapIdx, ] %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus)
# Plot BCAP counts by KO status and facet by HSC population
bcapDatShort %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
koVoomShort$E[bcapIdx, ] * koVoomShort$weights[bcapIdx, ] %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus)
koVoomShort$E[bcapIdx, ] * koVoomShort$weights[bcapIdx, ]
(koVoomShort$E[bcapIdx, ] * koVoomShort$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus)
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatShort <- (koVoomShort$E[bcapIdx, ] * koVoomShort$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus)
# Plot BCAP counts by KO status and facet by HSC population
bcapDatShort %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
samples = "long"))
(koVoomShort$E[bcapIdx, ] * koVoomShort$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus)
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
hscPop = groupDat$hscPop,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
hscPop = groupDatShort$hscPop,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
hscPop = groupDatLong$hscPop,
samples = "long"))
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
hscPop = groupDat$hscPop,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
hscPop = groupDatShort$hscPop,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
hscPop = groupDatLong$hscPop,
samples = "long"))
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus, colour = hscPop),
size = 3, alpha = 0.8, shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
hscPop = groupDat$hscPop,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
hscPop = groupDatShort$hscPop,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
hscPop = groupDatLong$hscPop,
samples = "long"))
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(fill = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus, colour = hscPop),
size = 3, alpha = 0.8, shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
hscPop = groupDat$hscPop,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
hscPop = groupDatShort$hscPop,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
hscPop = groupDatLong$hscPop,
samples = "long"))
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus, shape = hscPop),
size = 3, alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
View(bcapDatAll)
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
hscPop = groupDat$hscPop,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
hscPop = groupDatShort$hscPop,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
hscPop = groupDatLong$hscPop,
samples = "long"))
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus, size = hscPop),
alpha = 0.8, colour = "white", shape = 21) +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind()
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
hscPop = groupDat$hscPop,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
hscPop = groupDatShort$hscPop,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
hscPop = groupDatLong$hscPop,
samples = "long"))
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus, shape = hscPop),
size = 3, alpha = 0.8, colour = "white") +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind() +
scale_shape_manual(values = c(21, 22))
# Pull out raw counts for BCAP gene (Pik3ap1)
bcapIdx <- which(koVoom$genes$mgiSymbol == "Pik3ap1")
bcapIdxLong <- which(koVoomLong$genes$mgiSymbol == "Pik3ap1")
bcapIdxShort <- which(koVoomShort$genes$mgiSymbol == "Pik3ap1")
bcapDatAll <- (koVoom$E[bcapIdx, ] * koVoom$weights[bcapIdx, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDat$koStatus,
hscPop = groupDat$hscPop,
samples = "all") %>%
bind_rows((koVoomShort$E[bcapIdxShort, ] * koVoomShort$weights[bcapIdxShort, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatShort$koStatus,
hscPop = groupDatShort$hscPop,
samples = "short")) %>%
bind_rows((koVoomLong$E[bcapIdxLong, ] * koVoomLong$weights[bcapIdxLong, ]) %>%
melt(value.name = "count") %>%
add_rownames(var = "libID") %>%
mutate(koStatus = groupDatLong$koStatus,
hscPop = groupDatLong$hscPop,
samples = "long"))
# Plot BCAP counts by KO status and facet by HSC population
bcapDatAll %>%
ggplot(aes(x = koStatus, y = count)) +
geom_boxplot(aes(colour = koStatus), outlier.shape = NA) +
geom_point(aes(fill = koStatus, shape = hscPop),
size = 3, alpha = 0.8, colour = "slategray") +
geom_text(aes(label = libID),
hjust = -0.2, vjust = 1.2, size = 3) +
facet_wrap(~ samples) +
theme_classic() +
scale_color_colorblind() +
scale_fill_colorblind() +
scale_shape_manual(values = c(21, 22))
koResults %>% head()
cpm(dge$counts) %>% head()
cpm(dge$counts[1, ]) %>% head()
cpm(dge$counts)[1, ]
cpm(dge$counts)[bcapIdx, ]
koVoom$E[bcapIdx, ]
log2(cpm(dge$counts)[bcapIdx, ])
